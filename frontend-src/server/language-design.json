{
    "alphabet": {
        "conditions": {
            "and": "and",
            "or": "or",
            "==": "equal",
            "!=": "unequal",
            ">=": "GE",
            "<=": "LE",
            ">": "GThan",
            "<": "LThan"
        },
        "mathematical expressions": {
            "+": "plus",
            "-": "minus",
            "*": "mul",
            "/": "by",
            "//": "bint"
        },
        "keywords": {
            "if": "if",
            "while": "while",
            "break": "break",
            "def": "def",
            "range": "range",
            "for": "for",
            "else": "else",
            "elif": "elif",
            "try": "try",
            "except": "except",
            "finally": "finally",
            "raise": "raise",
            "global": "global",
            "import": "import",
            "return": "return",
            "null": "null",
            "class": "class",
            "pass": "pass",
            "self": "self",
            "int": "int",
            "float": "float",
            "str": "string",
            "True": "true",
            "False": "false",
            "zip": "zip",
            "len": "len",
            "list": "list",
            "continue": "continue",
            "with": "with",
            "is": "is",
            "as": "as",
            "in": "in"
        },
        "code blocks": {
            "if block": "sif",
            "while block": "swhile",
            "for loop block (with iterator)": "ifor",
            "foreach block": "efor"
        },
        "other": {
            "=": "to be",
            "\n": "enter",
            "_": "sub",
            "-": "dash",
            "(": "obrack",
            ")": "cbrack",
            "{": "obrace",
            "}": "cbrace",
            "[": "osquare",
            "]": "csquare",
            "undo": "undo",
            "redo": "redo"
        }
    },
    "grammar": {
        "conditionals": "alphabet[conditions]",
        "code insertion": {
            "variabla names": "^[a-zA-Z-_]+[0-9a-zA-Z-_]*$",
            "int values": "^[1-9][0-9]*$",
            "undo a command": "undo",
            "redo a command": "redo",
            "variable declaration": {
                "let": {
                    "variable name spoken": "variable names.."
                }
            },
            "variable initialization": {
                "mut": {
                    "parameters ordered": {
                        "variable name": "variable names..",
                        "value": "value of a variable.."
                    }
                }
            },
            "variable calls method": {
                "variable name": {
                    "parameters (ordered)": {
                        "grab": {
                            "function name": "calling a function.."
                        }
                    }
                }
            },
            "function definition": {
                "defi": {
                    "parameters (ordered)": {
                        "function name": "variables names..",
                        "function parameters": {
                            "normal paramaters": {
                                "parameter name": "variable names.."
                            },
                            "pend": "means there is another parameter",
                            "default parameters": {
                                "depar": {
                                    "parameters (ordered)": {
                                        "parameter name": "variable names..",
                                        "value": "value of a variable.."
                                    }
                                }
                            }
                        },
                        "dof": "end of parameters"
                    }
                }
            },
            "calling a function": {
                "ef": {
                    "parameters (ordered)": {
                        "function name": "variables names..",
                        "function parameters (ordered)": {
                            "normal parameters": "/// TO BE",
                            "named parameters": "/// TO BE"
                        }
                    }
                }
            },
            "condition formation": {
                "cond": {
                    "parameters (ordered": {
                        "variable or value": "variable names.. | value of a variable..",
                        "conditionals": "conditionals..",
                        "another variable or value": "variable names.. | value of a variable..",
                        "cof": "end of condition formation (enclosed between brackets)"
                    }
                }
            },
            "mathematical expressions": {},
            "indexing": {
                "dex": {
                    "parameters ordered": {
                        "variable name": "variable names..",
                        "index": {
                            "int value": "int values..",
                            "variable": "variable names..",
                            "zed": "end of indexing"
                        }
                    }
                }
            },
            "for loop block": {
                "sfor": {
                    "parameters (ordered)": {
                        "iterator name": "variable names..",
                        "range": {
                            "parameters": {
                                "int": "int values..",
                                "function return": "calling a function..",
                                "variable calls method": "/// TO BE",
                                "indexing an indexable": "indexing.."
                            }
                        }
                    }
                }
            },
            "for each block": {
                "efor": {
                    "parameters (ordered)": {
                        "dummy variable": "variables names..",
                        "iteratable": {
                            "method of an indexable": "calling a function..",
                            "indexing a list of indexables": "indexing.."
                        }
                    }
                }
            },
            "if block": {
                "sif": {
                    "condition": "condition formation.."
                }
            },
            "while block": {
                "swhile": {
                    "condition": "condition formation.."
                }
            }
        },
        "other commands": {
            "change directory": "cd",
            "open new file": "nodel",
            "navigate to unopened file in current directory": {
                "nop": {
                    "parameters (ordered)": {
                        "d": "means directory",
                        "#number": "the file number"
                    }
                }
            },
            "expand folder in current directory": {
                "pand": {
                    "parameters (ordered)": {
                        "d": "means directory",
                        "#number": "the folder number"
                    }
                }
            },
            "navigate to tab": "/// TO BE",
            "close tab": "/// TO BE",
            "close all tabs": "",
            "save file": "swave",
            "save file as": "/// TO BE",
            "add file to target directory in current existing directory": "/// TO BE",
            "scroll to line": "/// TO BE",
            "set cursor": "/// TO BE",
            "goto scope": "/// TO BE",
            "exit scope": "/// TO BE"
        }
    }
}