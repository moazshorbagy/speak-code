{
    "code-insertion": {
        "direct": {
            "and": "and",
            "end": "and",
            "or": "or",
            "equal": " == ",
            "equals": " == ",
            "unequal": " != ",
            "inequal": " != ",
            "at least": " >= ",
            "at most": " <= ",
            "greater": " > ",
            "lesser": " < ",
            "plus": " + ",
            "minus": " - ",
            "by": " * ",
            "split": " / ",
            "splits": " / ",
            "split int": " // ",
            "if": "if ",
            "while": "while ",
            "wild": "while ",
            "break": "break",
            "def": "def ",
            "deaf": "def ",
            "range": "range",
            "for": "for ",
            "else": "else",
            "elif": "elif",
            "try": "try",
            "except": "except",
            "finally": "finally",
            "raise": "raise ",
            "global": "global ",
            "import": "import ",
            "return": "return",
            "null": "null",
            "class": "class ",
            "pass": "pass",
            "self": "self",
            "int": "int",
            "float": "float",
            "string": "str",
            "True": "true",
            "False": "false",
            "zip": "zip",
            "len": "len",
            "list": "list",
            "continue": "continue",
            "with": "with",
            "is": " is ",
            "as": " as ",
            "in": " in ",
            "to be": " = ",
            "enter": "\n",
            "indent": "\t",
            "space": " ",
            "sub": "_",
            "dash": "-",
            "dot": ".",
            "open bracket": "(",
            "close bracket": ")",
            "bracket": "()",
            "open brace": "{",
            "close brace": "}",
            "braces": "{}",
            "open square": "[",
            "close square": "]",
            "square brackets": "[]",
            "single quote": "'",
            "single quotes": "'",
            "single quotations": "''",
            "single quotation": "''",
            "double quote": "\"",
            "double quotes": "\"",
            "double quotations": "\"\"",
            "double quotation": "\"\"",
            "undo": "undo",
            "redo": "redo",
            "zero": "0",
            "two": "2",
            "three": "3",
            "four": "4",
            "five": "5",
            "six": "6",
            "seven": "7",
            "eight": "8",
            "nine": "9"
        },
        "indirect": {
            "while loop": "while-loop-block",
            "if statement": "if-block",
            "efor": "foreach-block",
            "call": "call-function",
            "sfor": "for-loop-block",
            "dex": "index-variable",
            "condition": "condition-formation",
            "define": "define-function",
            "variable": "name-variable",
            "camel case": "camel-case-the-variable",
            "snake case": "snake-case-the-variable",
            "end condition": "end-condition",
            "end parameters": "end-parameters"
        }
    },
    "editor-commands": {
        "direct": {
            "change directory": "change-directory",
            "save": "save-file",
            "exit": "close-all-tabs",
            "new file": "new-file",
            "reveal cursor": "reveal-cursor",
            "exit scope": "exit-scope",
            "new scope": "new-scope",
            "zoom in": "zoom-in",
            "zoom out": "zoom-out"
        },
        "indirect": {
            "nop": "open-file-from-directory",
            "expand": "expand-folder",
            "close": "close-tab",
            "mad": "navgiate-to-tab",
            "camouflage": "save-file-as",
            "addhoc": "add-file-to-target-directory",
            "addfold": "add-folder-to-target-directory",
            "verizon": "scroll-to-line",
            "horizon": "scroll-to-column",
            "set cursor": "set-cursor"
        }
    },
    "cancel-executing-indirects": {
        "cancel": "cancel-constructing-commands"
    }
}